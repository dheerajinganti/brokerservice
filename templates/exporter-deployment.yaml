apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: postgres-exporter
    meta.helm.sh/release-namespace: hsdp-postgres
  labels:
    app: prometheus-postgres-exporter
    release: postgres-exporter
    cf-instance-id: {{instance_id}}
  name: postgres-exporter-{{instance_id}}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-postgres-exporter
      release: postgres-exporter
      cf-instance-id: {{instance_id}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus-postgres-exporter
        cf-instance-id: {{instance_id}}
        release: postgres-exporter
    spec:
      containers:
      - args:
        - --extend.query-path=/etc/config.yaml
        - --auto-discover-databases
        env:
        - name: DATA_SOURCE_URI
          value: '{{host}}:5432/postgres?sslmode=disable'
        - name: DATA_SOURCE_USER
          value: postgres
        - name: DATA_SOURCE_PASS
          valueFrom:
            secretKeyRef:
              key: pg_password
              name: postgres-{{instance_id}}
        image: wrouesnel/postgres_exporter:v0.8.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: postgres-exporter-{{instance_id}}
        ports:
        - containerPort: 9187
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config.yaml
          name: queries
          subPath: config.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: postgres-exporter-{{instance_id}}
        name: queries
